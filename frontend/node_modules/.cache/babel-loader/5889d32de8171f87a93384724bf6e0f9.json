{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/Header/Search/index.tsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: this.props.searchValue,\n      timerID: '',\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      timerID: setInterval(() => this.tick(), 1000)\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  _handleChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: this._handleChange.bind(this),\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"My Search is \", this.state.search]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Date \", this.state.date.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"timerID \", this.state.timerID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/frontend/src/components/Header/Search/index.tsx"],"names":["React","Component","Search","constructor","props","state","search","searchValue","timerID","date","Date","componentDidMount","setState","setInterval","tick","componentWillUnmount","clearInterval","_handleChange","event","console","log","target","value","render","bind","toLocaleTimeString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAYA,MAAMC,MAAN,SAAqBD,SAArB,CAA6C;AAEzCE,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,WADV;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAHG,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVJ,MAAAA,OAAO,EAAEK,WAAW,CAChB,MAAM,KAAKC,IAAL,EADU,EAEhB,IAFgB;AADV,KAAd;AAMH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKX,KAAL,CAAWG,OAAZ,CAAb;AACH;;AAEDM,EAAAA,IAAI,GAAG;AACH,SAAKF,QAAL,CAAc;AACVH,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADI,KAAd;AAGH;;AAEDO,EAAAA,aAAa,CAACC,KAAD,EAAa;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,SAAKV,QAAL,CAAc;AAAEN,MAAAA,MAAM,EAAEY,KAAK,CAACG,MAAN,CAAaC;AAAvB,KAAd;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACI;AAAO,QAAA,QAAQ,EAAE,KAAKN,aAAL,CAAmBO,IAAnB,CAAwB,IAAxB,CAAjB;AAAgD,QAAA,SAAS,EAAC,UAA1D;AAAqE,QAAA,GAAG,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,oCAAkB,KAAKnB,KAAL,CAAWC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,4BAAU,KAAKD,KAAL,CAAWI,IAAX,CAAgBgB,kBAAhB,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,+BAAa,KAAKpB,KAAL,CAAWG,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA7CwC;;AAgD7C,eAAeN,MAAf","sourcesContent":["import React, { Component } from 'react'\n\ninterface Props {\n    searchValue: string\n}\n\ninterface State {\n    search: string\n    timerID: any\n    date: any\n}\n\nclass Search extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            search: this.props.searchValue,\n            timerID: '',\n            date: new Date()\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            timerID: setInterval(\n                () => this.tick(),\n                1000\n            )\n        })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.timerID)\n    }\n\n    tick() {\n        this.setState({\n            date: new Date()\n        })\n    }\n\n    _handleChange(event: any) {\n        console.log(event.target.value)\n        this.setState({ search: event.target.value })\n    }\n\n\n    render() {\n        return (\n            <header className=\"App-header\">\n                <input onChange={this._handleChange.bind(this)} className=\"App-logo\" alt=\"logo\" />\n                <h1>My Search is {this.state.search}</h1>\n                <h1>Date {this.state.date.toLocaleTimeString()}</h1>\n                <h1>timerID {this.state.timerID}</h1>\n            </header>\n        )\n    }\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}